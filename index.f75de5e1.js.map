{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst headRow = document.querySelector('thead tr');\nconst body = document.querySelector('tbody');\nconst bodyRows = Array.from(body.querySelectorAll('tr'));\n\n// Sort & Toggle regions\n\nconst columnState = new Map([\n  ['name', { sorted: false }],\n  ['position', { sorted: false }],\n  ['office', { sorted: false }],\n  ['age', { sorted: false }],\n  ['salary', { sorted: false }],\n]);\n\nconst toggleSortState = (columnName) => {\n  const state = columnState.get(columnName);\n\n  state.sorted = !state.sorted;\n};\n\nconst getSortComparator = (columnName, ascending) => {\n  const multiplier = ascending ? 1 : -1;\n\n  switch (columnName) {\n    case 'name':\n      return (a, b) => multiplier\n        * a.cells[0].textContent.localeCompare(b.cells[0].textContent);\n    case 'position':\n      return (a, b) => multiplier\n        * a.cells[1].textContent.localeCompare(b.cells[1].textContent);\n    case 'office':\n      return (a, b) => multiplier\n        * a.cells[2].textContent.localeCompare(b.cells[2].textContent);\n    case 'age':\n      return (a, b) => multiplier\n        * (parseInt(a.cells[3].textContent) - parseInt(b.cells[3].textContent));\n\n    case 'salary':\n      return (a, b) => {\n        const aSalary = parseFloat(\n          a.cells[4].textContent.replace(/[^\\d.-]/g, ''));\n        const bSalary = parseFloat(\n          b.cells[4].textContent.replace(/[^\\d.-]/g, ''));\n\n        return multiplier * (aSalary - bSalary);\n      };\n    default:\n      return null;\n  }\n};\n\nconst sortTable = (columnName, comparator) => {\n  const sortedRows = bodyRows.slice().sort(comparator);\n\n  sortedRows.forEach(row => body.appendChild(row));\n};\n\nconst handleHeaderClick = (e) => {\n  const columnName = e.target.textContent.toLowerCase();\n  const state = columnState.get(columnName);\n\n  if (!state) {\n    return;\n  }\n\n  const ascending = !state.sorted;\n  const comparator = getSortComparator(columnName, ascending);\n\n  if (comparator) {\n    sortTable(columnName, comparator);\n    toggleSortState(columnName);\n  }\n};\n\nconst handleRowClick = (e) => {\n  const clickedRow = e.currentTarget;\n\n  bodyRows.forEach(row => row !== clickedRow && row.classList.remove('active'));\n  clickedRow.classList.toggle('active');\n};\n\nheadRow.addEventListener('click', handleHeaderClick);\nbodyRows.forEach(row => row.addEventListener('click', handleRowClick));\n\n// Form region\n\nconst employeeForm = createForm();\nconst select = createSelect();\nconst saveButton = createButton('Save to table');\nconst options = [\n  'Tokyo', 'Singapore', 'London', 'New York', 'Edinburgh', 'San Francisco'];\n\noptions.forEach(optionText => {\n  const option = createOption(optionText);\n\n  select.appendChild(option);\n});\n\nconst selectLabel = createLabel('office');\n\nselect.dataset.qa = 'office';\nselect.setAttribute('name', 'office');\nselectLabel.appendChild(select);\n\nconst inputLabels = ['name', 'position', 'age', 'salary'];\n\ninputLabels.forEach(labelName => {\n  const label = createLabel(labelName);\n  const input = createInput(labelName);\n\n  label.appendChild(input);\n  employeeForm.appendChild(label);\n});\n\nfunction createForm() {\n  const newForm = document.createElement('form');\n\n  newForm.classList.add('new-employee-form');\n\n  return newForm;\n}\n\nfunction createSelect() {\n  return document.createElement('select');\n}\n\nfunction createButton(text) {\n  const button = document.createElement('button');\n\n  button.setAttribute('type', 'submit');\n  button.textContent = text;\n\n  return button;\n}\n\nfunction createOption(text) {\n  const option = document.createElement('option');\n\n  option.textContent = text;\n\n  return option;\n}\n\nfunction createLabel(labelName) {\n  const label = document.createElement('label');\n\n  label.textContent = `${capitalize(labelName)}:`;\n\n  return label;\n}\n\nfunction createInput(labelName) {\n  const input = document.createElement('input');\n\n  input.dataset.qa = labelName;\n  input.setAttribute('name', labelName);\n\n  input.setAttribute('type', labelName === 'age'\n    || labelName === 'salary' ? 'number' : 'text');\n  input.setAttribute('required', '');\n\n  return input;\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nemployeeForm.insertBefore(selectLabel, employeeForm.children[1].nextSibling);\nemployeeForm.appendChild(saveButton);\ndocument.body.appendChild(employeeForm);\n\nconst form = document.querySelector('.new-employee-form');\n\nsaveButton.addEventListener('click', handleSaveButtonClick);\n\nfunction handleSaveButtonClick(e) {\n  e.preventDefault();\n\n  const namePerson = form.children[0].firstElementChild.value;\n  const position = form.children[1].firstElementChild.value;\n  const office = form.children[2].firstElementChild.value;\n  const age = +form.children[3].firstElementChild.value;\n  const salary = +form.children[4].firstElementChild.value;\n\n  if (namePerson.length < 4\n      || age < 18\n      || age > 90\n      || salary <= 0\n      || !isNaN(+position)) {\n    pushNotification(10, 10, 'Error', 'Incorrect data fields', 'error');\n\n    return;\n  }\n\n  const newRow = document.createElement('tr');\n\n  newRow.innerHTML = `\n    <td>${namePerson}</td>\n    <td>${position}</td>\n    <td>${office}</td>\n    <td>${age}</td>\n    <td>$${salary.toLocaleString('en-US')}</td>\n  `;\n  body.appendChild(newRow);\n  bodyRows.push(newRow);\n\n  newRow.addEventListener('click', handleRowClick);\n\n  columnState.forEach((value, key) => {\n    sortTable(key, getSortComparator(key, true));\n  });\n\n  pushNotification(10, 10,\n    'Success', 'The employee was successfully added to the list', 'success');\n  form.reset();\n}\n\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  const message = document.createElement('div');\n  const messageTitle = document.createElement('h2');\n  const messageP = document.createElement('p');\n\n  message.classList.add('notification');\n  message.dataset.qa = 'notification';\n  message.appendChild(messageTitle);\n  message.appendChild(messageP);\n\n  message.style.top = posTop + 'px';\n  message.style.right = posRight + 'px';\n  messageTitle.textContent = title;\n  messageP.textContent = description;\n\n  switch (type) {\n    case 'warning':\n      message.classList.add('warning');\n      break;\n    case 'success':\n      message.classList.add('success');\n      break;\n    case 'error':\n      message.classList.add('error');\n      break;\n    default:\n      break;\n  }\n\n  document.body.appendChild(message);\n\n  setTimeout(() => {\n    message.style.visibility = 'hidden';\n  }, 2000);\n};\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}